{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport FocusTrap from '../FocusTrap';\nimport { getModalUtilityClass } from './modalClasses';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, useClassNamesOverride(getModalUtilityClass));\n};\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\nfunction getHasTransition(children) {\n  return children ? children.props.hasOwnProperty('in') : false;\n}\n\n// A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\nconst defaultManager = new ModalManager();\n\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * *   [Dialog](https://mui.com/material-ui/api/dialog/)\n * *   [Drawer](https://mui.com/material-ui/api/drawer/)\n * *   [Menu](https://mui.com/material-ui/api/menu/)\n * *   [Popover](https://mui.com/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](https://mui.com/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n *\n * Demos:\n *\n * - [Modal](https://mui.com/base-ui/react-modal/)\n *\n * API:\n *\n * - [Modal API](https://mui.com/base-ui/react-modal/components-api/#modal)\n */\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(props, forwardedRef) {\n  var _props$ariaHidden, _slots$root;\n  const {\n      children,\n      closeAfterTransition = false,\n      container,\n      disableAutoFocus = false,\n      disableEnforceFocus = false,\n      disableEscapeKeyDown = false,\n      disablePortal = false,\n      disableRestoreFocus = false,\n      disableScrollLock = false,\n      hideBackdrop = false,\n      keepMounted = false,\n      // private\n      manager: managerProp = defaultManager,\n      onBackdropClick,\n      onClose,\n      onKeyDown,\n      open,\n      onTransitionEnter,\n      onTransitionExited,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  // TODO: `modal`` must change its type in this file to match the type of methods\n  // provided by `ModalManager`\n  const manager = managerProp;\n  const [exited, setExited] = React.useState(!open);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, forwardedRef);\n  const hasTransition = getHasTransition(children);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    });\n\n    // Fix a bug on Chrome where the scroll isn't initially 0.\n    if (modalRef.current) {\n      modalRef.current.scrollTop = 0;\n    }\n  };\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer);\n\n    // The element was already mounted.\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n    if (!node || !modalRef.current) {\n      return;\n    }\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n  const ownerState = _extends({}, props, {\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleEnter = () => {\n    setExited(false);\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n  const handleExited = () => {\n    setExited(true);\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n  const childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  }\n\n  // It's a Transition like component\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: handleRef,\n      role: 'presentation',\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState\n  });\n  const BackdropComponent = slots.backdrop;\n  const backdropProps = useSlotProps({\n    elementType: BackdropComponent,\n    externalSlotProps: slotProps.backdrop,\n    additionalProps: {\n      'aria-hidden': true,\n      onClick: handleBackdropClick,\n      open\n    },\n    className: classes.backdrop,\n    ownerState\n  });\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Portal\n  // @ts-expect-error TODO: include ref to Base UI Portal props\n  , {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default Modal;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","elementAcceptingRef","HTMLElementType","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_createChainedFunction","createChainedFunction","unstable_useEventCallback","useEventCallback","composeClasses","Portal","ModalManager","ariaHidden","FocusTrap","getModalUtilityClass","useSlotProps","useClassNamesOverride","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","slots","root","backdrop","getContainer","container","getHasTransition","children","props","hasOwnProperty","defaultManager","Modal","forwardRef","forwardedRef","_props$ariaHidden","_slots$root","closeAfterTransition","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","managerProp","onBackdropClick","onClose","onKeyDown","onTransitionEnter","onTransitionExited","slotProps","other","setExited","useState","modal","useRef","mountNodeRef","modalRef","handleRef","hasTransition","ariaHiddenProp","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","classes","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","childProps","tabIndex","undefined","onEnter","onExited","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","role","className","BackdropComponent","backdropProps","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","isRequired","bool","oneOfType","func","shape","object"],"sources":["D:/Files/Web Dev Projects/Code Buddy/code-buddy/node_modules/@mui/base/Modal/Modal.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport FocusTrap from '../FocusTrap';\nimport { getModalUtilityClass } from './modalClasses';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, useClassNamesOverride(getModalUtilityClass));\n};\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\nfunction getHasTransition(children) {\n  return children ? children.props.hasOwnProperty('in') : false;\n}\n\n// A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\nconst defaultManager = new ModalManager();\n\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * *   [Dialog](https://mui.com/material-ui/api/dialog/)\n * *   [Drawer](https://mui.com/material-ui/api/drawer/)\n * *   [Menu](https://mui.com/material-ui/api/menu/)\n * *   [Popover](https://mui.com/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](https://mui.com/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n *\n * Demos:\n *\n * - [Modal](https://mui.com/base-ui/react-modal/)\n *\n * API:\n *\n * - [Modal API](https://mui.com/base-ui/react-modal/components-api/#modal)\n */\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(props, forwardedRef) {\n  var _props$ariaHidden, _slots$root;\n  const {\n      children,\n      closeAfterTransition = false,\n      container,\n      disableAutoFocus = false,\n      disableEnforceFocus = false,\n      disableEscapeKeyDown = false,\n      disablePortal = false,\n      disableRestoreFocus = false,\n      disableScrollLock = false,\n      hideBackdrop = false,\n      keepMounted = false,\n      // private\n      manager: managerProp = defaultManager,\n      onBackdropClick,\n      onClose,\n      onKeyDown,\n      open,\n      onTransitionEnter,\n      onTransitionExited,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  // TODO: `modal`` must change its type in this file to match the type of methods\n  // provided by `ModalManager`\n  const manager = managerProp;\n  const [exited, setExited] = React.useState(!open);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, forwardedRef);\n  const hasTransition = getHasTransition(children);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    });\n\n    // Fix a bug on Chrome where the scroll isn't initially 0.\n    if (modalRef.current) {\n      modalRef.current.scrollTop = 0;\n    }\n  };\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer);\n\n    // The element was already mounted.\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n    if (!node || !modalRef.current) {\n      return;\n    }\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n  const ownerState = _extends({}, props, {\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleEnter = () => {\n    setExited(false);\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n  const handleExited = () => {\n    setExited(true);\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n  const childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  }\n\n  // It's a Transition like component\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: handleRef,\n      role: 'presentation',\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState\n  });\n  const BackdropComponent = slots.backdrop;\n  const backdropProps = useSlotProps({\n    elementType: BackdropComponent,\n    externalSlotProps: slotProps.backdrop,\n    additionalProps: {\n      'aria-hidden': true,\n      onClick: handleBackdropClick,\n      open\n    },\n    className: classes.backdrop,\n    ownerState\n  });\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Portal\n  // @ts-expect-error TODO: include ref to Base UI Portal props\n  , {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default Modal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}