{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { ListContext } from '../useList/ListContext';\nimport { CompoundComponentContext } from '../utils/useCompound';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Sets up the contexts for the underlying MenuItem components.\n *\n * @ignore - do not document.\n */\nexport default function MenuProvider(props) {\n  const {\n    value,\n    children\n  } = props;\n  const {\n    dispatch,\n    getItemIndex,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler,\n    registerItem,\n    totalSubitemCount\n  } = value;\n  const listContextValue = React.useMemo(() => ({\n    dispatch,\n    getItemState,\n    getItemIndex,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  }), [dispatch, getItemIndex, getItemState, registerHighlightChangeHandler, registerSelectionChangeHandler]);\n  const compoundComponentContextValue = React.useMemo(() => ({\n    getItemIndex,\n    registerItem,\n    totalSubitemCount\n  }), [registerItem, getItemIndex, totalSubitemCount]);\n  return /*#__PURE__*/_jsx(CompoundComponentContext.Provider, {\n    value: compoundComponentContextValue,\n    children: /*#__PURE__*/_jsx(ListContext.Provider, {\n      value: listContextValue,\n      children: children\n    })\n  });\n}","map":{"version":3,"names":["React","ListContext","CompoundComponentContext","jsx","_jsx","MenuProvider","props","value","children","dispatch","getItemIndex","getItemState","registerHighlightChangeHandler","registerSelectionChangeHandler","registerItem","totalSubitemCount","listContextValue","useMemo","compoundComponentContextValue","Provider"],"sources":["D:/Files/Web Dev Projects/Code Buddy/code-buddy/node_modules/@mui/base/useMenu/MenuProvider.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { ListContext } from '../useList/ListContext';\nimport { CompoundComponentContext } from '../utils/useCompound';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Sets up the contexts for the underlying MenuItem components.\n *\n * @ignore - do not document.\n */\nexport default function MenuProvider(props) {\n  const {\n    value,\n    children\n  } = props;\n  const {\n    dispatch,\n    getItemIndex,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler,\n    registerItem,\n    totalSubitemCount\n  } = value;\n  const listContextValue = React.useMemo(() => ({\n    dispatch,\n    getItemState,\n    getItemIndex,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  }), [dispatch, getItemIndex, getItemState, registerHighlightChangeHandler, registerSelectionChangeHandler]);\n  const compoundComponentContextValue = React.useMemo(() => ({\n    getItemIndex,\n    registerItem,\n    totalSubitemCount\n  }), [registerItem, getItemIndex, totalSubitemCount]);\n  return /*#__PURE__*/_jsx(CompoundComponentContext.Provider, {\n    value: compoundComponentContextValue,\n    children: /*#__PURE__*/_jsx(ListContext.Provider, {\n      value: listContextValue,\n      children: children\n    })\n  });\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,wBAAwB,QAAQ,sBAAsB;AAC/D,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC1C,MAAM;IACJC,KAAK;IACLC;EACF,CAAC,GAAGF,KAAK;EACT,MAAM;IACJG,QAAQ;IACRC,YAAY;IACZC,YAAY;IACZC,8BAA8B;IAC9BC,8BAA8B;IAC9BC,YAAY;IACZC;EACF,CAAC,GAAGR,KAAK;EACT,MAAMS,gBAAgB,GAAGhB,KAAK,CAACiB,OAAO,CAAC,OAAO;IAC5CR,QAAQ;IACRE,YAAY;IACZD,YAAY;IACZE,8BAA8B;IAC9BC;EACF,CAAC,CAAC,EAAE,CAACJ,QAAQ,EAAEC,YAAY,EAAEC,YAAY,EAAEC,8BAA8B,EAAEC,8BAA8B,CAAC,CAAC;EAC3G,MAAMK,6BAA6B,GAAGlB,KAAK,CAACiB,OAAO,CAAC,OAAO;IACzDP,YAAY;IACZI,YAAY;IACZC;EACF,CAAC,CAAC,EAAE,CAACD,YAAY,EAAEJ,YAAY,EAAEK,iBAAiB,CAAC,CAAC;EACpD,OAAO,aAAaX,IAAI,CAACF,wBAAwB,CAACiB,QAAQ,EAAE;IAC1DZ,KAAK,EAAEW,6BAA6B;IACpCV,QAAQ,EAAE,aAAaJ,IAAI,CAACH,WAAW,CAACkB,QAAQ,EAAE;MAChDZ,KAAK,EAAES,gBAAgB;MACvBR,QAAQ,EAAEA;IACZ,CAAC;EACH,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}