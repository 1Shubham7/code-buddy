{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"children\", \"value\", \"disabled\", \"onChange\", \"onClick\", \"onFocus\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { getTabUtilityClass } from './tabClasses';\nimport useTab from '../useTab';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    selected,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\n *\n * API:\n *\n * - [Tab API](https://mui.com/base-ui/react-tabs/components-api/#tab)\n */\nconst Tab = /*#__PURE__*/React.forwardRef(function Tab(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      disabled = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const tabRef = React.useRef();\n  const handleRef = useForkRef(tabRef, forwardedRef);\n  const {\n    active,\n    highlighted,\n    selected,\n    getRootProps\n  } = useTab(_extends({}, props, {\n    rootRef: handleRef\n  }));\n  const ownerState = _extends({}, props, {\n    active,\n    disabled,\n    highlighted,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const TabRoot = (_slots$root = slots.root) != null ? _slots$root : 'button';\n  const tabRootProps = useSlotProps({\n    elementType: TabRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabRoot, _extends({}, tabRootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tab.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * A ref for imperative actions. It currently only supports `focusVisible()` action.\n   */\n  action: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focusVisible: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Callback invoked when new value is being set.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside the Tab.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Tab.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * You can provide your own value. Otherwise, it falls back to the child position index.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Tab;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useForkRef","useForkRef","composeClasses","getTabUtilityClass","useTab","useSlotProps","useClassNamesOverride","jsx","_jsx","useUtilityClasses","ownerState","selected","disabled","slots","root","Tab","forwardRef","props","forwardedRef","_slots$root","children","slotProps","other","tabRef","useRef","handleRef","active","highlighted","getRootProps","rootRef","classes","TabRoot","tabRootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","additionalProps","ref","className","process","env","NODE_ENV","propTypes","action","oneOfType","func","shape","current","focusVisible","isRequired","node","bool","onChange","object","value","number","string"],"sources":["D:/Files/Web Dev Projects/Code Buddy/code-buddy/node_modules/@mui/base/Tab/Tab.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"children\", \"value\", \"disabled\", \"onChange\", \"onClick\", \"onFocus\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { getTabUtilityClass } from './tabClasses';\nimport useTab from '../useTab';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    selected,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\n *\n * API:\n *\n * - [Tab API](https://mui.com/base-ui/react-tabs/components-api/#tab)\n */\nconst Tab = /*#__PURE__*/React.forwardRef(function Tab(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      disabled = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const tabRef = React.useRef();\n  const handleRef = useForkRef(tabRef, forwardedRef);\n  const {\n    active,\n    highlighted,\n    selected,\n    getRootProps\n  } = useTab(_extends({}, props, {\n    rootRef: handleRef\n  }));\n  const ownerState = _extends({}, props, {\n    active,\n    disabled,\n    highlighted,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const TabRoot = (_slots$root = slots.root) != null ? _slots$root : 'button';\n  const tabRootProps = useSlotProps({\n    elementType: TabRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabRoot, _extends({}, tabRootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tab.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * A ref for imperative actions. It currently only supports `focusVisible()` action.\n   */\n  action: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focusVisible: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Callback invoked when new value is being set.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside the Tab.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Tab.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * You can provide your own value. Otherwise, it falls back to the child position index.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Tab;"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,MAAMC,SAAS,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,CAAC;AACrH,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,mBAAmB,IAAIC,UAAU,QAAQ,YAAY;AAC9D,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,SAASC,kBAAkB,QAAQ,cAAc;AACjD,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,YAAY,QAAQ,UAAU;AACvC,SAASC,qBAAqB,QAAQ,gCAAgC;AACtE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;EACtC,MAAM;IACJC,QAAQ;IACRC;EACF,CAAC,GAAGF,UAAU;EACd,MAAMG,KAAK,GAAG;IACZC,IAAI,EAAE,CAAC,MAAM,EAAEH,QAAQ,IAAI,UAAU,EAAEC,QAAQ,IAAI,UAAU;EAC/D,CAAC;EACD,OAAOV,cAAc,CAACW,KAAK,EAAEP,qBAAqB,CAACH,kBAAkB,CAAC,CAAC;AACzE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMY,GAAG,GAAG,aAAajB,KAAK,CAACkB,UAAU,CAAC,SAASD,GAAGA,CAACE,KAAK,EAAEC,YAAY,EAAE;EAC1E,IAAIC,WAAW;EACf,MAAM;MACFC,QAAQ;MACRR,QAAQ,GAAG,KAAK;MAChBS,SAAS,GAAG,CAAC,CAAC;MACdR,KAAK,GAAG,CAAC;IACX,CAAC,GAAGI,KAAK;IACTK,KAAK,GAAG1B,6BAA6B,CAACqB,KAAK,EAAEpB,SAAS,CAAC;EACzD,MAAM0B,MAAM,GAAGzB,KAAK,CAAC0B,MAAM,CAAC,CAAC;EAC7B,MAAMC,SAAS,GAAGxB,UAAU,CAACsB,MAAM,EAAEL,YAAY,CAAC;EAClD,MAAM;IACJQ,MAAM;IACNC,WAAW;IACXhB,QAAQ;IACRiB;EACF,CAAC,GAAGxB,MAAM,CAACT,QAAQ,CAAC,CAAC,CAAC,EAAEsB,KAAK,EAAE;IAC7BY,OAAO,EAAEJ;EACX,CAAC,CAAC,CAAC;EACH,MAAMf,UAAU,GAAGf,QAAQ,CAAC,CAAC,CAAC,EAAEsB,KAAK,EAAE;IACrCS,MAAM;IACNd,QAAQ;IACRe,WAAW;IACXhB;EACF,CAAC,CAAC;EACF,MAAMmB,OAAO,GAAGrB,iBAAiB,CAACC,UAAU,CAAC;EAC7C,MAAMqB,OAAO,GAAG,CAACZ,WAAW,GAAGN,KAAK,CAACC,IAAI,KAAK,IAAI,GAAGK,WAAW,GAAG,QAAQ;EAC3E,MAAMa,YAAY,GAAG3B,YAAY,CAAC;IAChC4B,WAAW,EAAEF,OAAO;IACpBG,YAAY,EAAEN,YAAY;IAC1BO,iBAAiB,EAAEd,SAAS,CAACP,IAAI;IACjCsB,sBAAsB,EAAEd,KAAK;IAC7Be,eAAe,EAAE;MACfC,GAAG,EAAEpB;IACP,CAAC;IACDR,UAAU;IACV6B,SAAS,EAAET,OAAO,CAAChB;EACrB,CAAC,CAAC;EACF,OAAO,aAAaN,IAAI,CAACuB,OAAO,EAAEpC,QAAQ,CAAC,CAAC,CAAC,EAAEqC,YAAY,EAAE;IAC3DZ,QAAQ,EAAEA;EACZ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACFoB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG3B,GAAG,CAAC4B,SAAS,CAAC,yBAAyB;EAC7E;EACA;EACA;EACA;EACA;AACF;AACA;EACEC,MAAM,EAAE7C,SAAS,CAAC8C,SAAS,CAAC,CAAC9C,SAAS,CAAC+C,IAAI,EAAE/C,SAAS,CAACgD,KAAK,CAAC;IAC3DC,OAAO,EAAEjD,SAAS,CAACgD,KAAK,CAAC;MACvBE,YAAY,EAAElD,SAAS,CAAC+C,IAAI,CAACI;IAC/B,CAAC;EACH,CAAC,CAAC,CAAC,CAAC;EACJ;AACF;AACA;EACE9B,QAAQ,EAAErB,SAAS,CAACoD,IAAI;EACxB;AACF;AACA;AACA;EACEvC,QAAQ,EAAEb,SAAS,CAACqD,IAAI;EACxB;AACF;AACA;EACEC,QAAQ,EAAEtD,SAAS,CAAC+C,IAAI;EACxB;AACF;AACA;AACA;EACEzB,SAAS,EAAEtB,SAAS,CAACgD,KAAK,CAAC;IACzBjC,IAAI,EAAEf,SAAS,CAAC8C,SAAS,CAAC,CAAC9C,SAAS,CAAC+C,IAAI,EAAE/C,SAAS,CAACuD,MAAM,CAAC;EAC9D,CAAC,CAAC;EACF;AACF;AACA;AACA;AACA;EACEzC,KAAK,EAAEd,SAAS,CAACgD,KAAK,CAAC;IACrBjC,IAAI,EAAEf,SAAS,CAACkC;EAClB,CAAC,CAAC;EACF;AACF;AACA;EACEsB,KAAK,EAAExD,SAAS,CAAC8C,SAAS,CAAC,CAAC9C,SAAS,CAACyD,MAAM,EAAEzD,SAAS,CAAC0D,MAAM,CAAC;AACjE,CAAC,GAAG,KAAK,CAAC;AACV,eAAe1C,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}