{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport useButton from '../useButton';\nimport { useListItem } from '../useList';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nfunction idGenerator(existingKeys) {\n  return `menu-item-${existingKeys.size}`;\n}\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItem API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-item)\n */\nexport default function useMenuItem(params) {\n  const {\n    disabled = false,\n    id: idParam,\n    rootRef: externalRef,\n    label\n  } = params;\n  const id = useId(idParam);\n  const itemRef = React.useRef(null);\n  const itemMetadata = React.useMemo(() => ({\n    disabled,\n    id: id != null ? id : '',\n    label,\n    ref: itemRef\n  }), [disabled, id, label]);\n  const {\n    getRootProps: getListRootProps,\n    highlighted,\n    rootRef: listItemRefHandler\n  } = useListItem({\n    item: id\n  });\n  const {\n    index,\n    totalItemCount\n  } = useCompoundItem(id != null ? id : idGenerator, itemMetadata);\n  const {\n    getRootProps: getButtonProps,\n    focusVisible,\n    rootRef: buttonRefHandler\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: true\n  });\n  const handleRef = useForkRef(listItemRefHandler, buttonRefHandler, externalRef, itemRef);\n  React.useDebugValue({\n    id,\n    highlighted,\n    disabled,\n    label\n  });\n\n  // If `id` is undefined (during SSR in React < 18), we fall back to rendering a simplified menu item\n  // which does not have access to infortmation about its position or highlighted state.\n  if (id === undefined) {\n    return {\n      getRootProps: (otherHandlers = {}) => _extends({}, otherHandlers, getButtonProps(otherHandlers), {\n        role: 'menuitem'\n      }),\n      disabled: false,\n      focusVisible,\n      highlighted: false,\n      index: -1,\n      totalItemCount: 0,\n      rootRef: handleRef\n    };\n  }\n  const getRootProps = (otherHandlers = {}) => {\n    const resolvedButtonProps = _extends({}, otherHandlers, getButtonProps(otherHandlers));\n    const resolvedMenuItemProps = _extends({}, resolvedButtonProps, getListRootProps(resolvedButtonProps));\n    return _extends({}, otherHandlers, resolvedButtonProps, resolvedMenuItemProps, {\n      role: 'menuitem',\n      ref: handleRef\n    });\n  };\n  return {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted,\n    index,\n    totalItemCount,\n    rootRef: handleRef\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useId","useId","unstable_useForkRef","useForkRef","useButton","useListItem","useCompoundItem","idGenerator","existingKeys","size","useMenuItem","params","disabled","id","idParam","rootRef","externalRef","label","itemRef","useRef","itemMetadata","useMemo","ref","getRootProps","getListRootProps","highlighted","listItemRefHandler","item","index","totalItemCount","getButtonProps","focusVisible","buttonRefHandler","focusableWhenDisabled","handleRef","useDebugValue","undefined","otherHandlers","role","resolvedButtonProps","resolvedMenuItemProps"],"sources":["D:/Files/Web Dev Projects/Code Buddy/code-buddy/node_modules/@mui/base/useMenuItem/useMenuItem.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport useButton from '../useButton';\nimport { useListItem } from '../useList';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nfunction idGenerator(existingKeys) {\n  return `menu-item-${existingKeys.size}`;\n}\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItem API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-item)\n */\nexport default function useMenuItem(params) {\n  const {\n    disabled = false,\n    id: idParam,\n    rootRef: externalRef,\n    label\n  } = params;\n  const id = useId(idParam);\n  const itemRef = React.useRef(null);\n  const itemMetadata = React.useMemo(() => ({\n    disabled,\n    id: id != null ? id : '',\n    label,\n    ref: itemRef\n  }), [disabled, id, label]);\n  const {\n    getRootProps: getListRootProps,\n    highlighted,\n    rootRef: listItemRefHandler\n  } = useListItem({\n    item: id\n  });\n  const {\n    index,\n    totalItemCount\n  } = useCompoundItem(id != null ? id : idGenerator, itemMetadata);\n  const {\n    getRootProps: getButtonProps,\n    focusVisible,\n    rootRef: buttonRefHandler\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: true\n  });\n  const handleRef = useForkRef(listItemRefHandler, buttonRefHandler, externalRef, itemRef);\n  React.useDebugValue({\n    id,\n    highlighted,\n    disabled,\n    label\n  });\n\n  // If `id` is undefined (during SSR in React < 18), we fall back to rendering a simplified menu item\n  // which does not have access to infortmation about its position or highlighted state.\n  if (id === undefined) {\n    return {\n      getRootProps: (otherHandlers = {}) => _extends({}, otherHandlers, getButtonProps(otherHandlers), {\n        role: 'menuitem'\n      }),\n      disabled: false,\n      focusVisible,\n      highlighted: false,\n      index: -1,\n      totalItemCount: 0,\n      rootRef: handleRef\n    };\n  }\n  const getRootProps = (otherHandlers = {}) => {\n    const resolvedButtonProps = _extends({}, otherHandlers, getButtonProps(otherHandlers));\n    const resolvedMenuItemProps = _extends({}, resolvedButtonProps, getListRootProps(resolvedButtonProps));\n    return _extends({}, otherHandlers, resolvedButtonProps, resolvedMenuItemProps, {\n      role: 'menuitem',\n      ref: handleRef\n    });\n  };\n  return {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted,\n    index,\n    totalItemCount,\n    rootRef: handleRef\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}