{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useTabsContext } from '../Tabs';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nimport { useListItem } from '../useList';\nimport useButton from '../useButton';\nfunction tabValueGenerator(otherTabValues) {\n  return otherTabValues.size;\n}\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTab API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tab)\n */\nfunction useTab(parameters) {\n  const {\n    value: valueParam,\n    rootRef: externalRef,\n    disabled = false,\n    id: idParam\n  } = parameters;\n  const tabRef = React.useRef(null);\n  const id = useId(idParam);\n  const {\n    value: selectedValue,\n    selectionFollowsFocus,\n    getTabPanelId\n  } = useTabsContext();\n  const tabMetadata = React.useMemo(() => ({\n    disabled,\n    ref: tabRef,\n    id\n  }), [disabled, tabRef, id]);\n  const {\n    id: value,\n    index,\n    totalItemCount: totalTabsCount\n  } = useCompoundItem(valueParam != null ? valueParam : tabValueGenerator, tabMetadata);\n  const {\n    getRootProps: getTabProps,\n    rootRef: listItemRefHandler,\n    highlighted,\n    selected\n  } = useListItem({\n    item: value\n  });\n  const {\n    getRootProps: getButtonProps,\n    rootRef: buttonRefHandler,\n    active,\n    focusVisible,\n    setFocusVisible\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: !selectionFollowsFocus,\n    type: 'button'\n  });\n  const handleRef = useForkRef(tabRef, externalRef, listItemRefHandler, buttonRefHandler);\n  const tabPanelId = value !== undefined ? getTabPanelId(value) : undefined;\n  const getRootProps = (otherHandlers = {}) => {\n    const resolvedTabProps = _extends({}, otherHandlers, getTabProps(otherHandlers));\n    const resolvedButtonProps = _extends({}, resolvedTabProps, getButtonProps(resolvedTabProps));\n    return _extends({}, resolvedButtonProps, {\n      role: 'tab',\n      'aria-controls': tabPanelId,\n      'aria-selected': selected,\n      id,\n      ref: handleRef\n    });\n  };\n  return {\n    getRootProps,\n    active,\n    focusVisible,\n    highlighted,\n    index,\n    rootRef: handleRef,\n    // the `selected` state isn't set on the server (it relies on effects to be calculated),\n    // so we fall back to checking the `value` prop with the selectedValue from the TabsContext\n    selected: selected || value === selectedValue,\n    setFocusVisible,\n    totalTabsCount\n  };\n}\nexport default useTab;","map":{"version":3,"names":["_extends","React","unstable_useId","useId","unstable_useForkRef","useForkRef","useTabsContext","useCompoundItem","useListItem","useButton","tabValueGenerator","otherTabValues","size","useTab","parameters","value","valueParam","rootRef","externalRef","disabled","id","idParam","tabRef","useRef","selectedValue","selectionFollowsFocus","getTabPanelId","tabMetadata","useMemo","ref","index","totalItemCount","totalTabsCount","getRootProps","getTabProps","listItemRefHandler","highlighted","selected","item","getButtonProps","buttonRefHandler","active","focusVisible","setFocusVisible","focusableWhenDisabled","type","handleRef","tabPanelId","undefined","otherHandlers","resolvedTabProps","resolvedButtonProps","role"],"sources":["D:/Files/Web Dev Projects/Code Buddy/code-buddy/node_modules/@mui/base/useTab/useTab.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useTabsContext } from '../Tabs';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nimport { useListItem } from '../useList';\nimport useButton from '../useButton';\nfunction tabValueGenerator(otherTabValues) {\n  return otherTabValues.size;\n}\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTab API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tab)\n */\nfunction useTab(parameters) {\n  const {\n    value: valueParam,\n    rootRef: externalRef,\n    disabled = false,\n    id: idParam\n  } = parameters;\n  const tabRef = React.useRef(null);\n  const id = useId(idParam);\n  const {\n    value: selectedValue,\n    selectionFollowsFocus,\n    getTabPanelId\n  } = useTabsContext();\n  const tabMetadata = React.useMemo(() => ({\n    disabled,\n    ref: tabRef,\n    id\n  }), [disabled, tabRef, id]);\n  const {\n    id: value,\n    index,\n    totalItemCount: totalTabsCount\n  } = useCompoundItem(valueParam != null ? valueParam : tabValueGenerator, tabMetadata);\n  const {\n    getRootProps: getTabProps,\n    rootRef: listItemRefHandler,\n    highlighted,\n    selected\n  } = useListItem({\n    item: value\n  });\n  const {\n    getRootProps: getButtonProps,\n    rootRef: buttonRefHandler,\n    active,\n    focusVisible,\n    setFocusVisible\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: !selectionFollowsFocus,\n    type: 'button'\n  });\n  const handleRef = useForkRef(tabRef, externalRef, listItemRefHandler, buttonRefHandler);\n  const tabPanelId = value !== undefined ? getTabPanelId(value) : undefined;\n  const getRootProps = (otherHandlers = {}) => {\n    const resolvedTabProps = _extends({}, otherHandlers, getTabProps(otherHandlers));\n    const resolvedButtonProps = _extends({}, resolvedTabProps, getButtonProps(resolvedTabProps));\n    return _extends({}, resolvedButtonProps, {\n      role: 'tab',\n      'aria-controls': tabPanelId,\n      'aria-selected': selected,\n      id,\n      ref: handleRef\n    });\n  };\n  return {\n    getRootProps,\n    active,\n    focusVisible,\n    highlighted,\n    index,\n    rootRef: handleRef,\n    // the `selected` state isn't set on the server (it relies on effects to be calculated),\n    // so we fall back to checking the `value` prop with the selectedValue from the TabsContext\n    selected: selected || value === selectedValue,\n    setFocusVisible,\n    totalTabsCount\n  };\n}\nexport default useTab;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}