[{"E:\\Hunny\\Github\\code-buddy\\frontend\\src\\index.js":"1","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\App.js":"2","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\reportWebVitals.js":"3","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\index.js":"4","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\coding_buddy\\Coding_buddy.jsx":"5","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\navbar\\Navbar.jsx":"6","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\about\\About.jsx":"7","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\me\\Me.jsx":"8","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\contribute\\Contribute.jsx":"9","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\footer\\Footer.jsx":"10","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\search_page\\Search_page.jsx":"11","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\coder\\CoderCards.jsx":"12","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\coder\\CoderCard.jsx":"13"},{"size":552,"mtime":1702181962944,"results":"14","hashOfConfig":"15"},{"size":557,"mtime":1702181962819,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1702181962944,"results":"17","hashOfConfig":"15"},{"size":455,"mtime":1702181962912,"results":"18","hashOfConfig":"15"},{"size":1440,"mtime":1702181962881,"results":"19","hashOfConfig":"15"},{"size":1577,"mtime":1702181962944,"results":"20","hashOfConfig":"15"},{"size":774,"mtime":1702181962865,"results":"21","hashOfConfig":"15"},{"size":719,"mtime":1702181962912,"results":"22","hashOfConfig":"15"},{"size":928,"mtime":1702181962912,"results":"23","hashOfConfig":"15"},{"size":1797,"mtime":1702181962912,"results":"24","hashOfConfig":"15"},{"size":967,"mtime":1702181962944,"results":"25","hashOfConfig":"15"},{"size":941,"mtime":1702181962881,"results":"26","hashOfConfig":"15"},{"size":578,"mtime":1702181962881,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mda0oj",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Hunny\\Github\\code-buddy\\frontend\\src\\index.js",[],[],"E:\\Hunny\\Github\\code-buddy\\frontend\\src\\App.js",["70","71"],[],"// import \"./App.css\";\r\n// import Navbar from \"./components/navbar/Navbar\";\r\nimport { Navbar, Coding_buddy, About, Me, Contribute, Footer, Search_page } from './components'\r\n// import {Coders} from \"./components/coder/CoderCards\"\r\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Coding_buddy />\r\n      <About />\r\n      <Search_page />\r\n      <Me />\r\n      <Contribute />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\reportWebVitals.js",[],[],"E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\index.js",[],[],"E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\coding_buddy\\Coding_buddy.jsx",["72"],[],"import React, { useState, useEffect } from 'react';\r\nimport './coding_buddy.css';\r\n\r\nexport default function Coding_buddy() {\r\n  const [dynamicText, setDynamicText] = useState('');\r\n  const phrases = [\"Find your Coding Buddy\", \"Participate in Hackathons, Competitions and events together\", \"Build projects together and get hired\"];\r\n\r\n  useEffect(() => {\r\n    let i = 0;\r\n    let j = 0;\r\n    let isDeleting = false;\r\n\r\n    const loop = () => {\r\n      setDynamicText((prevText) => {\r\n        const currentPhrase = phrases[i];\r\n        let newText = isDeleting\r\n          ? currentPhrase.substring(0, j - 1)\r\n          : currentPhrase.substring(0, j + 1);\r\n\r\n        j = isDeleting ? j - 1 : j + 1;\r\n\r\n        if (isDeleting && j === 0) {\r\n          isDeleting = false;\r\n          i = (i + 1) % phrases.length;\r\n        }\r\n\r\n        if (!isDeleting && j === currentPhrase.length + 1) {\r\n          isDeleting = true;\r\n        }\r\n\r\n        return newText;\r\n      });\r\n\r\n      const speed = isDeleting ? 50 : 150;\r\n\r\n      setTimeout(loop, speed);\r\n    };\r\n\r\n    loop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"website-head\">\r\n      <div className=\"image-container\">\r\n        <div className=\"image-div\">\r\n          <div className=\"main-text\">\r\n            <p id=\"tt\">\r\n              {dynamicText}\r\n              <span className=\"fake-cursor\">|</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\navbar\\Navbar.jsx",[],[],"E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\about\\About.jsx",[],[],"E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\me\\Me.jsx",[],[],"E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\contribute\\Contribute.jsx",[],[],"E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\footer\\Footer.jsx",[],[],"E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\search_page\\Search_page.jsx",[],[],"E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\coder\\CoderCards.jsx",["73"],[],"import React, {useState, useEffect} from 'react'\r\n\r\nimport axios from \"axios\"\r\n\r\nimport Coder from './CoderCard.jsx';\r\n\r\nconst Coders =() =>{\r\n    const [coders, setCoders] = useState([])\r\n    const [refreshData, setRefreshData] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getAllCoders();\r\n    }, [])\r\n\r\n    if(refreshData){\r\n        setRefreshData(false);\r\n        getAllCoders();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {coders != null && coders.map((coder, i) => (\r\n        <Coder coderData={coder} />\r\n        ))}\r\n        </>\r\n    );\r\n\r\n    function getAllCoders(){\r\n        var url = \"http://localhost:1111/coders\";\r\n        axios.get(url, {\r\n            responseType: 'json'\r\n        }).then(response => {\r\n            console.log(\"Response from the server:\", response);\r\n            if (response.status == 200) {\r\n                setCoders(response.data);\r\n            }\r\n        })\r\n    }    \r\n}\r\n\r\nexport default Coders","E:\\Hunny\\Github\\code-buddy\\frontend\\src\\components\\coder\\CoderCard.jsx",[],[],{"ruleId":"74","severity":1,"message":"75","line":12,"column":7,"nodeType":"76","messageId":"77","endLine":12,"endColumn":23},{"ruleId":"74","severity":1,"message":"78","line":14,"column":7,"nodeType":"76","messageId":"77","endLine":14,"endColumn":22},{"ruleId":"79","severity":1,"message":"80","line":40,"column":6,"nodeType":"81","endLine":40,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":34,"column":33,"nodeType":"85","messageId":"86","endLine":34,"endColumn":35},"react/jsx-pascal-case","Imported JSX component Coding_buddy must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Search_page must be in PascalCase or SCREAMING_SNAKE_CASE","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'phrases'. Either include it or remove the dependency array.","ArrayExpression",["87"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"88","fix":"89"},"Update the dependencies array to be: [phrases]",{"range":"90","text":"91"},[1072,1074],"[phrases]"]